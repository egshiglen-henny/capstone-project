name: Run the unit tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

# testing
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/install-dependencies

      - name: Run pytest
        run: pytest

  runmigrations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/install-dependencies

      - name: Run django migrate
        run: python manage.py migrate

  migrations-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: ./.github/actions/install-dependencies

      - name: Run makemigrations
        run: python manage.py makemigrations --check
    
  semantic-release:
    runs-on: ubuntu-latest
    needs:
      - test
      - runmigrations
      - migrations-check
    if: github.ref == 'refs/heads/main'
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic.outputs.new_release_version }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Run semantic-release
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
            @semantic-release/github
            conventional-changelog-conventionalcommits
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
  build-docker-image:
    runs-on: ubuntu-latest
    needs:
      - semantic-release
    if: github.ref == 'refs/heads/main' && needs.semantic-release.outputs.new-release-published == 'true'
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with: # parameters
          registry: ghcr.io 
          username: ${{ github.actor }} # interpolation
          password: ${{ secrets.GITHUB_TOKEN }}

    #   Expose madeup data
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/egshiglen2024359/capstone-project
          tags: |
            type=semver,pattern={{version}},value=v${{ needs.semantic-release.outputs.new-release-version }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }} # main
          labels: ${{ steps.meta.outputs.labels }}

  deploy-application:
    runs-on: ubuntu-latest
    needs:
      - semantic-release
      - build-docker-image
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Update Image Version in values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'environments/production/values.yaml' 
          propertyPath: 'image.tag'
          value: ${{ needs.semantic-release.outputs.new-release-version }}
          branch: main
          commitChange: true
          message: 'chore: Deploy Image Version to ${{ needs.semantic-release.outputs.new-release-version }} to production [skip ci]'